"""
Type stubs for spacy module to satisfy MyPy type checking.
This is a minimal stub file that includes just enough to satisfy type checking.
"""

from typing import Any, Dict, List, Optional, Iterator, TypeVar, Callable, Union, Tuple

T = TypeVar('T')

class Language:
    """Base language class."""
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def __call__(self, text: str, **kwargs: Any) -> 'Doc': ...
    def pipe(self, texts: List[str], **kwargs: Any) -> Iterator['Doc']: ...

class Doc:
    """Document class"""
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    @property
    def ents(self) -> List['Span']: ...
    @property
    def text(self) -> str: ...
    @property
    def sents(self) -> Iterator['Span']: ...

class Span:
    """Span class for document slices with annotations"""
    @property
    def text(self) -> str: ...
    @property
    def label_(self) -> str: ...
    @property
    def start_char(self) -> int: ...
    @property
    def end_char(self) -> int: ...

def load(model_name: str, **kwargs: Any) -> Language: ...
