"""
Type stubs for spacy to satisfy MyPy type checking
"""
from typing import Any, Dict, List, Optional, Set, Tuple, Iterator, Union, Callable

class Doc:
    """Stub for spaCy Doc class"""
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def __iter__(self) -> Iterator[Any]: ...
    def __getitem__(self, key: Any) -> Any: ...
    @property
    def ents(self) -> List[Span]: ...
    @property
    def text(self) -> str: ...
    @property
    def noun_chunks(self) -> Iterator[Span]: ...

class Span:
    """Stub for spaCy Span class"""
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    @property
    def text(self) -> str: ...
    @property
    def label_(self) -> str: ...
    @property
    def start(self) -> int: ...
    @property
    def end(self) -> int: ...
    @property
    def start_char(self) -> int: ...
    @property
    def end_char(self) -> int: ...

class Language:
    """Stub for spaCy Language class"""
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def __call__(self, text: str, *args: Any, **kwargs: Any) -> Doc: ...
    def pipe(self, texts: List[str], *args: Any, **kwargs: Any) -> Iterator[Doc]: ...

def load(model_name: str, *args: Any, **kwargs: Any) -> Language: ...

# Add missing module functions
def prefer_gpu() -> None: ...
